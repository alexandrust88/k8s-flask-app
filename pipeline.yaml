trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  jobs:
  - job: Test
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'
    - script: pip install pipenv
      displayName: 'Install pipenv'

    - script: pipenv install --system --dev --deploy --ignore-pipfile
      displayName: 'Install dependencies'

    - script: make coverage
      displayName: 'Run tests'

    - script: make lint
      displayName: 'Run lint'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for Python 3.7'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- stage: BuildAndPush
  jobs:
  - job: BuildAndPush
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub'
        repository: 'biancarosa/k8s-flask-app'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - task: AzureFunction@1
      inputs:
        function: 'https://approval-check.azurewebsites.net/'
        key: '$(MY_FUNCTION_KEY)'
        method: 'POST'
        waitForCompletion: 'true'
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'k8s-flask-app-cluster'
        command: 'apply'
        arguments: '-f kubernetes/configmap.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'k8s-flask-app-cluster'
        command: 'apply'
        arguments: '-f kubernetes/secrets.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'k8s-flask-app-cluster'
        command: 'apply'
        arguments: '-f kubernetes/deployment.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'